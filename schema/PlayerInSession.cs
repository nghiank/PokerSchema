// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace schema
{

using global::System;
using global::FlatBuffers;

public struct PlayerInSession : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerInSession GetRootAsPlayerInSession(ByteBuffer _bb) { return GetRootAsPlayerInSession(_bb, new PlayerInSession()); }
  public static PlayerInSession GetRootAsPlayerInSession(ByteBuffer _bb, PlayerInSession obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerInSession __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
  public int Amount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PlayerInSession> CreatePlayerInSession(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      int amount = 0) {
    builder.StartObject(2);
    PlayerInSession.AddAmount(builder, amount);
    PlayerInSession.AddName(builder, nameOffset);
    return PlayerInSession.EndPlayerInSession(builder);
  }

  public static void StartPlayerInSession(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddAmount(FlatBufferBuilder builder, int amount) { builder.AddInt(1, amount, 0); }
  public static Offset<PlayerInSession> EndPlayerInSession(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerInSession>(o);
  }
};


}
